{
  "version": 3,
  "sources": ["../../primereact/card/card.esm.js"],
  "sourcesContent": ["'use client';\r\nimport * as React from 'react';\r\nimport { PrimeReactContext } from 'primereact/api';\r\nimport { ComponentBase, useHandleStyle } from 'primereact/componentbase';\r\nimport { useMergeProps } from 'primereact/hooks';\r\nimport { ObjectUtils, classNames } from 'primereact/utils';\r\n\r\nvar classes = {\r\n  root: 'p-card p-component',\r\n  header: 'p-card-header',\r\n  title: 'p-card-title',\r\n  subTitle: 'p-card-subtitle',\r\n  content: 'p-card-content',\r\n  footer: 'p-card-footer',\r\n  body: 'p-card-body'\r\n};\r\nvar styles = \"\\n@layer primereact {\\n    .p-card-header img {\\n        width: 100%;\\n    }\\n}\\n\";\r\nvar CardBase = ComponentBase.extend({\r\n  defaultProps: {\r\n    __TYPE: 'Card',\r\n    id: null,\r\n    header: null,\r\n    footer: null,\r\n    title: null,\r\n    subTitle: null,\r\n    style: null,\r\n    className: null,\r\n    children: undefined\r\n  },\r\n  css: {\r\n    classes: classes,\r\n    styles: styles\r\n  }\r\n});\r\n\r\nvar Card = /*#__PURE__*/React.forwardRef(function (inProps, ref) {\r\n  var mergeProps = useMergeProps();\r\n  var context = React.useContext(PrimeReactContext);\r\n  var props = CardBase.getProps(inProps, context);\r\n  var elementRef = React.useRef(ref);\r\n  var _CardBase$setMetaData = CardBase.setMetaData({\r\n      props: props\r\n    }),\r\n    ptm = _CardBase$setMetaData.ptm,\r\n    cx = _CardBase$setMetaData.cx,\r\n    isUnstyled = _CardBase$setMetaData.isUnstyled;\r\n  useHandleStyle(CardBase.css.styles, isUnstyled, {\r\n    name: 'card'\r\n  });\r\n  var createHeader = function createHeader() {\r\n    var headerProps = mergeProps({\r\n      className: cx('header')\r\n    }, ptm('header'));\r\n    if (props.header) {\r\n      return /*#__PURE__*/React.createElement(\"div\", headerProps, ObjectUtils.getJSXElement(props.header, props));\r\n    }\r\n    return null;\r\n  };\r\n  var createBody = function createBody() {\r\n    var titleProps = mergeProps({\r\n      className: cx('title')\r\n    }, ptm('title'));\r\n    var title = props.title && /*#__PURE__*/React.createElement(\"div\", titleProps, ObjectUtils.getJSXElement(props.title, props));\r\n    var subTitleProps = mergeProps({\r\n      className: cx('subTitle')\r\n    }, ptm('subTitle'));\r\n    var subTitle = props.subTitle && /*#__PURE__*/React.createElement(\"div\", subTitleProps, ObjectUtils.getJSXElement(props.subTitle, props));\r\n    var contentProps = mergeProps({\r\n      className: cx('content')\r\n    }, ptm('content'));\r\n    var children = props.children && /*#__PURE__*/React.createElement(\"div\", contentProps, props.children);\r\n    var footerProps = mergeProps({\r\n      className: cx('footer')\r\n    }, ptm('footer'));\r\n    var footer = props.footer && /*#__PURE__*/React.createElement(\"div\", footerProps, ObjectUtils.getJSXElement(props.footer, props));\r\n    var bodyProps = mergeProps({\r\n      className: cx('body')\r\n    }, ptm('body'));\r\n    return /*#__PURE__*/React.createElement(\"div\", bodyProps, title, subTitle, children, footer);\r\n  };\r\n  React.useEffect(function () {\r\n    ObjectUtils.combinedRefs(elementRef, ref);\r\n  }, [elementRef, ref]);\r\n  var rootProps = mergeProps({\r\n    id: props.id,\r\n    ref: elementRef,\r\n    style: props.style,\r\n    className: classNames(props.className, cx('root'))\r\n  }, CardBase.getOtherProps(props), ptm('root'));\r\n  var header = createHeader();\r\n  var body = createBody();\r\n  return /*#__PURE__*/React.createElement(\"div\", rootProps, header, body);\r\n});\r\nCard.displayName = 'Card';\r\n\r\nexport { Card };\r\n"],
  "mappings": "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",
  "names": ["createHeader", "createBody"]
}
